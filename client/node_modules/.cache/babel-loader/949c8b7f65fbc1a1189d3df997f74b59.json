{"ast":null,"code":"var _jsxFileName = \"/Users/sejaldua/Desktop/Fall2020/misc/sejal-einblick-stock-challenge/client/src/Chart.js\";\nimport React, { Component } from \"react\";\nimport \"./LineChart.css\";\n\nclass LineChart extends Component {\n  // GET MAX & MIN X\n  getMinX() {\n    const {\n      data\n    } = this.props;\n    return data[0].time;\n  }\n\n  getMaxX() {\n    const {\n      data\n    } = this.props;\n    return data[data.length - 1].time;\n  } // GET MAX & MIN Y\n\n\n  getMinY() {\n    const {\n      data\n    } = this.props;\n    return data.reduce((min, p) => p.y < min ? p.y : min, data[0].price);\n  }\n\n  getMaxY() {\n    const {\n      data\n    } = this.props;\n    return data.reduce((max, p) => p.y > max ? p.y : max, data[0].price);\n  } // GET SVG COORDINATES\n\n\n  getSvgX(x) {\n    const {\n      svgWidth\n    } = this.props;\n    return x / this.getMaxX() * svgWidth;\n  }\n\n  getSvgY(y) {\n    const {\n      svgHeight\n    } = this.props;\n    return svgHeight - y / this.getMaxY() * svgHeight;\n  } // BUILD SVG PATH\n\n\n  makePath() {\n    const {\n      data,\n      color\n    } = this.props;\n    let pathD = \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\n    pathD += data.map((point, i) => {\n      return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\n    });\n    return /*#__PURE__*/React.createElement(\"path\", {\n      className: \"linechart_path\",\n      d: pathD,\n      style: {\n        stroke: color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    });\n  } // BUILD GRID AXIS\n\n\n  makeAxis() {\n    const minX = this.getMinX(),\n          maxX = this.getMaxX();\n    const minY = this.getMinY(),\n          maxY = this.getMaxY();\n    return /*#__PURE__*/React.createElement(\"g\", {\n      className: \"linechart_axis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"line\", {\n      x1: this.getSvgX(minX),\n      y1: this.getSvgY(minY),\n      x2: this.getSvgX(maxX),\n      y2: this.getSvgY(minY),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"line\", {\n      x1: this.getSvgX(minX),\n      y1: this.getSvgY(minY),\n      x2: this.getSvgX(minX),\n      y2: this.getSvgY(maxY),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }));\n  } // RENDER & RETURN SVG PATH AND AXIS\n\n\n  render() {\n    const {\n      svgHeight,\n      svgWidth\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: `0 0 ${svgWidth} ${svgHeight}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, this.makePath(), this.makeAxis());\n  }\n\n} // DEFAULT PROPS\n\n\nLineChart.defaultProps = {\n  data: [],\n  color: '#2196F3',\n  svgHeight: 300,\n  svgWidth: 700\n};\nexport default LineChart;","map":{"version":3,"sources":["/Users/sejaldua/Desktop/Fall2020/misc/sejal-einblick-stock-challenge/client/src/Chart.js"],"names":["React","Component","LineChart","getMinX","data","props","time","getMaxX","length","getMinY","reduce","min","p","y","price","getMaxY","max","getSvgX","x","svgWidth","getSvgY","svgHeight","makePath","color","pathD","map","point","i","stroke","makeAxis","minX","maxX","minY","maxY","render","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport \"./LineChart.css\";\n\nclass LineChart extends Component {\n\n  // GET MAX & MIN X\n  getMinX() {\n    const {data} = this.props;\n    return data[0].time;\n  }\n  getMaxX() {\n    const {data} = this.props;\n    return data[data.length - 1].time;\n  }\n  // GET MAX & MIN Y\n  getMinY() {\n    const {data} = this.props;\n    return data.reduce((min, p) => p.y < min ? p.y : min, data[0].price);\n  }\n  getMaxY() {\n    const {data} = this.props;\n    return data.reduce((max, p) => p.y > max ? p.y : max, data[0].price);\n  }\n  // GET SVG COORDINATES\n  getSvgX(x) {\n    const {svgWidth} = this.props;\n    return (x / this.getMaxX() * svgWidth);\n  }\n  getSvgY(y) {\n    const {svgHeight} = this.props;\n    return svgHeight - (y / this.getMaxY() * svgHeight);\n  }\n  // BUILD SVG PATH\n  makePath() {\n    const {data, color} = this.props;\n    let pathD = \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\n\n    pathD += data.map((point, i) => {\n      return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\n    });\n\n    return (\n      <path className=\"linechart_path\" d={pathD} style={{stroke: color}} />\n    );\n  }\n  // BUILD GRID AXIS\n  makeAxis() {\n  const minX = this.getMinX(), maxX = this.getMaxX();\n  const minY = this.getMinY(), maxY = this.getMaxY();\n\n  return (\n    <g className=\"linechart_axis\">\n      <line\n        x1={this.getSvgX(minX)} y1={this.getSvgY(minY)}\n        x2={this.getSvgX(maxX)} y2={this.getSvgY(minY)} />\n      <line\n        x1={this.getSvgX(minX)} y1={this.getSvgY(minY)}\n        x2={this.getSvgX(minX)} y2={this.getSvgY(maxY)} />\n    </g>\n    );\n  }\n  // RENDER & RETURN SVG PATH AND AXIS\n  render() {\n    const {svgHeight, svgWidth} = this.props;\n\n    return (\n      <svg viewBox={`0 0 ${svgWidth} ${svgHeight}`}>\n        {this.makePath()}\n        {this.makeAxis()}\n      </svg>\n    );\n  }\n}\n// DEFAULT PROPS\nLineChart.defaultProps = {\n  data: [],\n  color: '#2196F3',\n  svgHeight: 300,\n  svgWidth: 700\n}\n\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}