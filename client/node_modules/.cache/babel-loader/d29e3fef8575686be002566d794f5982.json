{"ast":null,"code":"var _jsxFileName = \"/Users/sejaldua/Desktop/Fall2020/misc/sejal-einblick-stock-challenge/client/src/Chart.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { render } from 'react-dom';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport XYAxis from './components/axis/xy-axis';\nimport Line from './components/line/line';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { extent } from 'd3-array';\nimport { transition } from 'd3-transition';\n\nclass Chart extends Component {\n  constructor() {\n    super();\n\n    this.getData = e => {\n      this.setState(prevState => {\n        const data = prevState.data.map(d => ({\n          time: d.time,\n          price: d.price\n        }));\n        return {\n          data\n        };\n      });\n    };\n\n    this.state = {\n      data: this.props.data\n    };\n    console.log(this.state.data);\n  }\n\n  render() {\n    const {\n      data\n    } = this.state.data;\n    const parentWidth = 500;\n    const margins = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20\n    };\n    const width = parentWidth - margins.left - margins.right;\n    const height = 200 - margins.top - margins.bottom;\n    const ticks = 5;\n    const t = transition().duration(1000);\n    const xScale = scaleBand().domain(data.map(d => d.time)).rangeRound([0, width]).padding(0.1);\n    const yScale = scaleLinear().domain(extent(data, d => d.price)).range([height, 0]).nice();\n    const lineGenerator = line().x(d => xScale(d.time)).y(d => yScale(d.price)).curve(curveMonotoneX);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Randomize data\"), /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"lineChartSvg\",\n      width: width + margins.left + margins.right,\n      height: height + margins.top + margins.bottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      transform: `translate(${margins.left}, ${margins.top})`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(XYAxis, Object.assign({\n      xScale,\n      yScale,\n      height,\n      ticks,\n      t\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Line, {\n      data: data,\n      xScale: xScale,\n      yScale: yScale,\n      lineGenerator: lineGenerator,\n      width: width,\n      height: height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport { Chart };","map":{"version":3,"sources":["/Users/sejaldua/Desktop/Fall2020/misc/sejal-einblick-stock-challenge/client/src/Chart.js"],"names":["React","Component","render","scaleLinear","scaleBand","XYAxis","Line","line","curveMonotoneX","extent","transition","Chart","constructor","getData","e","setState","prevState","data","map","d","time","price","state","props","console","log","parentWidth","margins","top","right","bottom","left","width","height","ticks","t","duration","xScale","domain","rangeRound","padding","yScale","range","nice","lineGenerator","x","y","curve"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { render } from 'react-dom';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport XYAxis from './components/axis/xy-axis';\nimport Line from './components/line/line';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { extent } from 'd3-array';\nimport { transition } from 'd3-transition';\n\nclass Chart extends Component {\n  constructor() {\n    super();\n    this.state = { \n      data: this.props.data\n    };\n    console.log(this.state.data);\n  }\n\n  getData = (e) => {\n    this.setState((prevState) => {\n      const data = prevState.data.map(d => ({\n        time: d.time,\n        price: d.price\n      }))\n      return {\n        data\n      }\n    })\n  }\n  render() {\n    const { data } = this.state.data;\n    const parentWidth = 500;\n\n    const margins = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20,\n    };\n\n    const width = parentWidth - margins.left - margins.right;\n    const height = 200 - margins.top - margins.bottom;\n\n    const ticks = 5;\n    const t = transition().duration(1000);\n\n    const xScale = scaleBand()\n      .domain(data.map(d => d.time))\n      .rangeRound([0, width]).padding(0.1);\n\n    const yScale = scaleLinear()\n      .domain(extent(data, d => d.price))\n      .range([height, 0])\n      .nice();\n\n    const lineGenerator = line()\n      .x(d => xScale(d.time))\n      .y(d => yScale(d.price))\n      .curve(curveMonotoneX);\n\n    return (\n      <div>\n        <button onClick={this.getData}>Randomize data</button>\n        <svg\n          className=\"lineChartSvg\"\n          width={width + margins.left + margins.right}\n          height={height + margins.top + margins.bottom}\n        >\n          <g transform={`translate(${margins.left}, ${margins.top})`}>\n            <XYAxis {...{ xScale, yScale, height, ticks, t }} />\n            <Line data={data} xScale={xScale} yScale={yScale} lineGenerator={lineGenerator} width={width} height={height} />\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport {\n    Chart\n}\n"]},"metadata":{},"sourceType":"module"}