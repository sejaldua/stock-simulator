{"ast":null,"code":"var _jsxFileName = \"/Users/sejaldua/Desktop/Fall2020/misc/sejal-einblick-stock-challenge/client/src/Line.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Line, defaults } from 'react-chartjs-2';\ndefaults.global.maintainAspectRatio = false;\n\nclass LineChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lineChartData: {\n        labels: [],\n        datasets: [{\n          type: \"line\",\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          enabled: true\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10\n            }\n          }]\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const oldDataSet = this.state.lineChartData.datasets[0];\n    const newDataSet = { ...oldDataSet\n    };\n    newDataSet.data = this.props.data.price;\n    const newChartData = { ...this.state.lineChartData,\n      datasets: [newDataSet],\n      labels: this.props.data.time\n    };\n    this.setState({\n      lineChartData: newChartData\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"article\", {\n      className: \"canvas-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: this.state.lineChartData,\n      options: this.state.lineChartOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/sejaldua/Desktop/Fall2020/misc/sejal-einblick-stock-challenge/client/src/Line.js"],"names":["React","Component","Line","defaults","global","maintainAspectRatio","LineChart","state","lineChartData","labels","datasets","type","backgroundColor","borderWidth","lineTension","data","lineChartOptions","responsive","tooltips","enabled","scales","xAxes","ticks","autoSkip","maxTicksLimit","componentDidMount","oldDataSet","newDataSet","props","price","newChartData","time","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,iBAA/B;AAEAA,QAAQ,CAACC,MAAT,CAAgBC,mBAAhB,GAAsC,KAAtC;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BM,KAD8B,GACtB;AACJC,MAAAA,aAAa,EAAE;AACbC,QAAAA,MAAM,EAAE,EADK;AAEbC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,IAAI,EAAE,MADR;AAEEC,UAAAA,eAAe,EAAE,kBAFnB;AAGEC,UAAAA,WAAW,EAAE,GAHf;AAIEC,UAAAA,WAAW,EAAE,IAJf;AAKEC,UAAAA,IAAI,EAAE;AALR,SADQ;AAFG,OADX;AAaJC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE,IADI;AAEhBZ,QAAAA,mBAAmB,EAAE,KAFL;AAGhBa,QAAAA,QAAQ,EAAE;AACRC,UAAAA,OAAO,EAAE;AADD,SAHM;AAMhBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,QAAQ,EAAE,IADL;AAELC,cAAAA,aAAa,EAAE;AAFV;AADT,WADK;AADD;AANQ;AAbd,KADsB;AAAA;;AAiC5BC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,UAAU,GAAG,KAAKnB,KAAL,CAAWC,aAAX,CAAyBE,QAAzB,CAAkC,CAAlC,CAAnB;AACA,UAAMiB,UAAU,GAAG,EAAE,GAAGD;AAAL,KAAnB;AACAC,IAAAA,UAAU,CAACZ,IAAX,GAAkB,KAAKa,KAAL,CAAWb,IAAX,CAAgBc,KAAlC;AAEA,UAAMC,YAAY,GAAG,EACnB,GAAG,KAAKvB,KAAL,CAAWC,aADK;AAEnBE,MAAAA,QAAQ,EAAE,CAACiB,UAAD,CAFS;AAGnBlB,MAAAA,MAAM,EAAE,KAAKmB,KAAL,CAAWb,IAAX,CAAgBgB;AAHL,KAArB;AAKA,SAAKC,QAAL,CAAc;AAAExB,MAAAA,aAAa,EAAEsB;AAAjB,KAAd;AACL;;AAECG,EAAAA,MAAM,GAAG;AACP,wBACI;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACA,MAAA,IAAI,EAAE,KAAK1B,KAAL,CAAWC,aADjB;AAEA,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWS,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQC;;AAvDyB;;AA0DlC,eAAeV,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Line, defaults } from 'react-chartjs-2';\n\ndefaults.global.maintainAspectRatio = false\n\nclass LineChart extends Component {\n    state = {\n        lineChartData: {\n          labels: [],\n          datasets: [\n            {\n              type: \"line\",\n              backgroundColor: \"rgba(0, 0, 0, 0)\",\n              borderWidth: \"2\",\n              lineTension: 0.45,\n              data: []\n            }\n          ]\n        },\n        lineChartOptions: {\n          responsive: true,\n          maintainAspectRatio: false,\n          tooltips: {\n            enabled: true\n          },\n          scales: {\n            xAxes: [\n              {\n                ticks: {\n                  autoSkip: true,\n                  maxTicksLimit: 10\n                }\n              }\n            ]\n          }\n        }\n      };\n    \n      componentDidMount() {    \n          const oldDataSet = this.state.lineChartData.datasets[0];\n          const newDataSet = { ...oldDataSet };\n          newDataSet.data = this.props.data.price;\n    \n          const newChartData = {\n            ...this.state.lineChartData,\n            datasets: [newDataSet],\n            labels: this.props.data.time\n          };\n          this.setState({ lineChartData: newChartData });\n    }\n    \n      render() {\n        return (\n            <article className=\"canvas-container\">\n                <Line\n                data={this.state.lineChartData}\n                options={this.state.lineChartOptions}\n                />\n          </article>\n         );\n        }\n}\n\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}