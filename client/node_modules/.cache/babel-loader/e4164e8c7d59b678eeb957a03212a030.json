{"ast":null,"code":"var _jsxFileName = \"/Users/sejaldua/Desktop/Fall2020/misc/stock-ticker-react/client/src/Chart.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport D3TsChart from './d3-ts-chart';\nconst MAX_POINTS_TO_STORE = 60;\nconst DEFAULT_X_TICKS = 20;\nexport class Chart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.seriesList = [{\n      name: 'stock-graph',\n      type: 'LINE',\n      stroke: '#038C7E',\n      strokeWidth: 5,\n      label: 'Readings',\n      labelClass: 'readings'\n    }];\n    this.tsChart = new D3TsChart();\n    this.state = {\n      data: [],\n      lastTimestamp: null,\n      error: ''\n    };\n\n    this.setError = (type, error) => {\n      this.setState({\n        data: [],\n        connected: false,\n        error: `${error.toString()} | ${type}`\n      });\n    };\n\n    this.storeReading = () => {\n      this.setState(prevState => {\n        //   const data = prevState.data[\"times\"];\n        // const pointsToStore = Math.max(data.length - MAX_POINTS_TO_STORE, 0);\n        return {\n          data: this.props.data,\n          error: false,\n          lastTimestamp: \"blah\"\n        };\n      });\n      this.updateChart();\n    };\n\n    this.render = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'chart-container ' + (this.state.error ? 'faded' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, this.seriesList.map(series => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        id: series.name,\n        key: series.name,\n        className: series.labelClass,\n        onClick: this.toggleSeries,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }), series.label);\n    })));\n  }\n\n  componentDidMount() {\n    const parentRef = ReactDOM.findDOMNode(this);\n    this.tsChart.init({\n      elRef: parentRef.getElementsByClassName('chart-container')[0],\n      classList: {\n        svg: 'z-chart'\n      }\n    });\n    this.tsChart.addSeries(this.seriesList[0]); // readings\n\n    this.storeReading();\n  }\n\n  /**\n   * `highestValueInView` is used to calculate out the highest value in the currently\n   * shown data in order to normalize the zscores 0/1 to it\n   */\n  updateChart() {\n    // console.log(this.props.data);\n    const data = this.props.data;\n    this.tsChart.adjustAxes(data[\"times\"]);\n    this.tsChart.setSeriesData('sensor-data', data[\"prices\"], false);\n  }\n\n}\nexport default Chart;","map":{"version":3,"sources":["/Users/sejaldua/Desktop/Fall2020/misc/stock-ticker-react/client/src/Chart.js"],"names":["React","ReactDOM","D3TsChart","MAX_POINTS_TO_STORE","DEFAULT_X_TICKS","Chart","Component","seriesList","name","type","stroke","strokeWidth","label","labelClass","tsChart","state","data","lastTimestamp","error","setError","setState","connected","toString","storeReading","prevState","props","updateChart","render","map","series","toggleSeries","componentDidMount","parentRef","findDOMNode","init","elRef","getElementsByClassName","classList","svg","addSeries","adjustAxes","setSeriesData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport D3TsChart from './d3-ts-chart';\n\nconst MAX_POINTS_TO_STORE = 60;\nconst DEFAULT_X_TICKS = 20;\n\nexport class Chart extends React.Component {\n\n  seriesList = [\n    {\n      name: 'stock-graph',\n      type: 'LINE',\n      stroke: '#038C7E',\n      strokeWidth: 5,\n      label: 'Readings',\n      labelClass: 'readings',\n    },\n  ]\n  tsChart = new D3TsChart();\n  socket;\n  state = {\n    data: [],\n    lastTimestamp: null,\n    error: ''\n  }\n\n  componentDidMount() {\n\n    const parentRef = ReactDOM.findDOMNode(this);\n\n    this.tsChart.init({\n      elRef: parentRef.getElementsByClassName('chart-container')[0],\n      classList: {\n        svg: 'z-chart'\n      }\n    });\n\n    this.tsChart.addSeries(this.seriesList[0]); // readings\n    this.storeReading();\n  }\n\n\n  setError = (type, error) => {\n    this.setState({ data: [], connected: false, error: `${error.toString()} | ${type}` });\n  }\n\n  /**\n  * `pointsToStore` is the number of stored data points\n  * - We need to cache more date than 20 \n  * - This should be useful when implementing variable `x-ticks` in UI\n  */\n  storeReading = () => {\n    this.setState((prevState) => {\n    //   const data = prevState.data[\"times\"];\n      // const pointsToStore = Math.max(data.length - MAX_POINTS_TO_STORE, 0);\n\n\n      return {\n        data: this.props.data,\n        error: false,\n        lastTimestamp: \"blah\"\n      };\n    });\n\n    this.updateChart();\n  }\n\n  /**\n   * `highestValueInView` is used to calculate out the highest value in the currently\n   * shown data in order to normalize the zscores 0/1 to it\n   */\n  updateChart() {\n    // console.log(this.props.data);\n    const data = this.props.data;\n\n    this.tsChart.adjustAxes(data[\"times\"]);\n    this.tsChart.setSeriesData('sensor-data', data[\"prices\"], false);\n  }\n\n\n  render = () => (\n    <div className=\"card\">\n\n      <div className={'chart-container ' + (this.state.error ? 'faded' : '')}></div>\n\n\n      <div className=\"legend\">\n        {this.seriesList.map((series) => {\n          return (\n            <span\n              id={series.name}\n              key={series.name}\n              className={series.labelClass}\n              onClick={this.toggleSeries}>\n              <i className=\"box\"></i>\n              {series.label}\n            </span>\n          );\n        })}\n      </div>\n\n    </div>\n  )\n\n}\nexport default Chart;"]},"metadata":{},"sourceType":"module"}